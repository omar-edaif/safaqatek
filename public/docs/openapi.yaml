openapi: 3.0.3
info:
  title: 'safaqatok api vertion 1'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://safaqatek.test'
paths:
  '/api/v1/{lang}/user/login':
    post:
      summary: login
      description: "If  data was valid and everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with status 422 with validation error if exist  ."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    message: 'The given data was invalid.'
                    errors:
                      data:
                        - 'The provided credentials are incorrect.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      message: 'The given data was invalid.'
                      errors:
                        data:
                          - 'The provided credentials are incorrect.'
        200:
          description: login
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 20
                  token: 20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu
                properties:
                  id:
                    type: integer
                    example: 20
                  token:
                    type: string
                    example: 20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: xhill@example.com
                password:
                  type: string
                  description: ''
                  example: est
              required:
                - email
                - password
      security: []
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/new/password':
    post:
      summary: 'set new password'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'new password'
          content:
            application/json:
              schema:
                type: object
                example:
                  state: true
                  code: '200'
                  message: 'password was changed successfully'
                  execution: '0.349 seconds'
                  data:
                    id: 36
                    token: 36|yAhv3yRnNyhJ9lwaPDA4uqVnc0nsGbeiqfR8jeK4
                properties:
                  state:
                    type: boolean
                    example: true
                  code:
                    type: string
                    example: '200'
                  message:
                    type: string
                    example: 'password was changed successfully'
                  execution:
                    type: string
                    example: '0.349 seconds'
                  data:
                    type: object
                    example:
                      id: 36
                      token: 36|yAhv3yRnNyhJ9lwaPDA4uqVnc0nsGbeiqfR8jeK4
        404:
          description: 'new password'
          content:
            application/json:
              schema:
                type: object
                example:
                  state: false
                  code: '404'
                  message: 'لا يوجد مستخدم بهذا البريد الإلكتروني'
                  execution: '0.297 seconds'
                properties:
                  state:
                    type: boolean
                    example: false
                  code:
                    type: string
                    example: '404'
                  message:
                    type: string
                    example: 'لا يوجد مستخدم بهذا البريد الإلكتروني'
                  execution:
                    type: string
                    example: '0.297 seconds'
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of user  .'
                  example: Exemple@exemple.com
                password:
                  type: string
                  description: 'The new password of user  .'
                  example: Exemple1233
              required:
                - email
                - password
      security: []
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/logout':
    post:
      summary: logout
      description: 'If  request have param '' token_id '' valid and everything is okay, you''ll get a 200 OK response.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: logout
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'you are logout now'
                properties:
                  message:
                    type: string
                    example: 'you are logout now'
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                token_id:
                  type: The
                  description: 'id of user token .'
                  example: '20'
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/google/callback':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      security: []
    parameters:
      -
        in: path
        name: lang
        description: ''
        example: delectus
        required: true
        schema:
          type: string
  '/api/v1/{lang}/user/phone':
    post:
      summary: 'Get phone'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: logout
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'you are logout now'
                properties:
                  message:
                    type: string
                    example: 'you are logout now'
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of user  .'
                  example: Exemple@exemple.com
              required:
                - email
      security: []
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/register':
    post:
      summary: register
      description: "If  data was valid and everything is okay, you'll get a 200 OK response.\n\nOtherwise, the request will fail with status 422 with validation error if exist  ."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: 'validation error'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The given data was invalid.'
                  errors:
                    username:
                      - 'The username field is required.'
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    type: object
                    example:
                      username:
                        - 'The username field is required.'
                      email:
                        - 'The email field is required.'
        200:
          description: 'new user'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 20
                  token: 20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu
                properties:
                  id:
                    type: integer
                    example: 20
                  token:
                    type: string
                    example: 20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Must not be greater than 15 characters.'
                  example: dsamvdnipol
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: maud.langworth@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: mfqwudk
                phone:
                  type: string
                  description: ''
                  example: et
              required:
                - username
                - email
                - password
                - phone
      security: []
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/profile':
    get:
      summary: 'user profile'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: profile
          content:
            application/json:
              schema:
                type: object
                example:
                  state: true
                  code: '200'
                  message: 'password was changed successfully'
                  execution: '0.349 seconds'
                  data:
                    id: 36
                    token: 36|yAhv3yRnNyhJ9lwaPDA4uqVnc0nsGbeiqfR8jeK4
                properties:
                  state:
                    type: boolean
                    example: true
                  code:
                    type: string
                    example: '200'
                  message:
                    type: string
                    example: 'password was changed successfully'
                  execution:
                    type: string
                    example: '0.349 seconds'
                  data:
                    type: object
                    example:
                      id: 36
                      token: 36|yAhv3yRnNyhJ9lwaPDA4uqVnc0nsGbeiqfR8jeK4
      tags:
        - 'User management'
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/purchase':
    post:
      summary: 'user purchase'
      description: 'If  request have param '' cart and payment_id and amount '' exist and everything is okay, you''ll get a 201 OK response.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: purchase
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    transaction_id: ch_3KmcRyHBm3O5wniB0TUIofgp
                    amount: 500
                    currency: AED
                    created_at: 04/09/2022
                    cart:
                      -
                        name_en: enim
                        name_ar: 'الاسم '
                        price: 235
                        currency: aed
                        quantity: 2
                    coupons:
                      -
                        key: U-443372-11273-1
                        participate_with: 6
                        created_at: '04/09/2022 11:04:31'
                        product:
                          name_ar: 'الاسم '
                          name_en: enim
                          image: 'http://safaqatek.test/images/product/product_00.jpg'
                          closing_at: '05/05/2022 09:05:47'
                          price: 235
                          currency: aed
                properties:
                  data:
                    type: object
                    example:
                      transaction_id: ch_3KmcRyHBm3O5wniB0TUIofgp
                      amount: 500
                      currency: AED
                      created_at: 04/09/2022
                      cart:
                        -
                          name_en: enim
                          name_ar: 'الاسم '
                          price: 235
                          currency: aed
                          quantity: 2
                      coupons:
                        -
                          key: U-443372-11273-1
                          participate_with: 6
                          created_at: '04/09/2022 11:04:31'
                          product:
                            name_ar: 'الاسم '
                            name_en: enim
                            image: 'http://safaqatek.test/images/product/product_00.jpg'
                            closing_at: '05/05/2022 09:05:47'
                            price: 235
                            currency: aed
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: ''
                  example: repellat
                payment_id:
                  type: string
                  description: ''
                  example: est
                cart:
                  type: object
                  description: 'The Customer purchases  exempele [{"id":1,"quantity":2}] .'
                  example:
                    -
                      id: 1
                      quantity: 2
                  properties: []
                is_donate:
                  type: boolean
                  description: 'if user choise to donate.'
                  example: false
                lat:
                  type: string
                  description: 'The location lat .'
                  example: repellat
                lng:
                  type: string
                  description: 'The location long .'
                  example: qui
              required:
                - amount
                - payment_id
                - cart
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/user/coupons':
    get:
      summary: 'user coupons'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'coupons are exist'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      key: H-427379-12334-4
                      participate_with: 6
                      created_at: '04/08/2022 12:04:44'
                      product:
                        name_ar: 'الاسم '
                        name_en: ut
                        image: 'http://safaqatek.test/images/product/product_00.jpg'
                        closing_at: '05/24/2022 09:05:39'
                        price: 201
                        currency: aed
                properties:
                  data:
                    type: array
                    example:
                      -
                        key: H-427379-12334-4
                        participate_with: 6
                        created_at: '04/08/2022 12:04:44'
                        product:
                          name_ar: 'الاسم '
                          name_en: ut
                          image: 'http://safaqatek.test/images/product/product_00.jpg'
                          closing_at: '05/24/2022 09:05:39'
                          price: 201
                          currency: aed
                    items:
                      type: object
      tags:
        - 'User management'
    parameters:
      -
        in: path
        name: lang
        description: ''
        example: repellendus
        required: true
        schema:
          type: string
  '/api/v1/{lang}/user/wishlists':
    get:
      summary: 'user wishlist'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: 'wishlists are exist'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name_en: enim
                      name_ar: 'الاسم '
                      award_name_ar: 'أسم الجائزة بالعربي'
                      award_name_en: numquam
                      price: 235
                      currency: null
                      image: 'http://safaqatek.test/images/product/product_00.jpg'
                      quantity: 200
                      sold_out: 133
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name_en: enim
                        name_ar: 'الاسم '
                        award_name_ar: 'أسم الجائزة بالعربي'
                        award_name_en: numquam
                        price: 235
                        currency: null
                        image: 'http://safaqatek.test/images/product/product_00.jpg'
                        quantity: 200
                        sold_out: 133
                    items:
                      type: object
      tags:
        - 'User management'
    parameters:
      -
        in: path
        name: lang
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  '/api/v1/{lang}/product':
    post:
      summary: 'get product'
      description: 'this route is called when to get get specific quained of product'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'product management'
    parameters:
      -
        in: path
        name: lang
        description: 'The language.'
        example: en
        required: true
        schema:
          type: string
  '/api/v1/{lang}/product/wishlist/add/{id}':
    get:
      summary: 'add product to wishlist'
      description: 'this route is called when the user wants to add a product to the Wish List'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'product management'
    parameters:
      -
        in: path
        name: lang
        description: 'The language.'
        example: en
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the product .'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/{lang}/product/wishlist/delete/{id}':
    get:
      summary: 'delete product from wishlist'
      description: 'this route is called when the user wants to delete a product to the Wish List'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'product management'
    parameters:
      -
        in: path
        name: lang
        description: 'The language.'
        example: en
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the product .'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/{lang}/product/winners':
    get:
      summary: 'product winners'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: winners
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      username: jaafar
                      url: 'https://www.youtube.com/watch?v=iWwY6K5Vjyo'
                      award_name_en: Mr.
                      award_name_ar: 'أسم الجائزة بالعربي'
                      announced_on: 'April 14, 2022'
                      is_current_user: false
                    -
                      username: jaafar
                      url: 'https://www.youtube.com/watch?v=iWwY6K5Vjyo'
                      award_name_en: Ms.
                      award_name_ar: 'أسم الجائزة بالعربي'
                      announced_on: 'April 14, 2022'
                      is_current_user: false
                    -
                      username: jaafar
                      url: 'https://www.youtube.com/watch?v=iWwY6K5Vjyo'
                      award_name_en: Mr.
                      award_name_ar: 'أسم الجائزة بالعربي'
                      announced_on: 'April 14, 2022'
                      is_current_user: false
                  links:
                    first: 'http://safaqatek.test/api/v1/aut/product/winners?page=1'
                    last: 'http://safaqatek.test/api/v1/aut/product/winners?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://safaqatek.test/api/v1/aut/product/winners?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://safaqatek.test/api/v1/aut/product/winners'
                    per_page: 20
                    to: 3
                    total: 3
                properties:
                  data:
                    type: array
                    example:
                      -
                        username: jaafar
                        url: 'https://www.youtube.com/watch?v=iWwY6K5Vjyo'
                        award_name_en: Mr.
                        award_name_ar: 'أسم الجائزة بالعربي'
                        announced_on: 'April 14, 2022'
                        is_current_user: false
                      -
                        username: jaafar
                        url: 'https://www.youtube.com/watch?v=iWwY6K5Vjyo'
                        award_name_en: Ms.
                        award_name_ar: 'أسم الجائزة بالعربي'
                        announced_on: 'April 14, 2022'
                        is_current_user: false
                      -
                        username: jaafar
                        url: 'https://www.youtube.com/watch?v=iWwY6K5Vjyo'
                        award_name_en: Mr.
                        award_name_ar: 'أسم الجائزة بالعربي'
                        announced_on: 'April 14, 2022'
                        is_current_user: false
                    items:
                      type: object
                  links:
                    type: object
                    example:
                      first: 'http://safaqatek.test/api/v1/aut/product/winners?page=1'
                      last: 'http://safaqatek.test/api/v1/aut/product/winners?page=1'
                      prev: null
                      next: null
                  meta:
                    type: object
                    example:
                      current_page: 1
                      from: 1
                      last_page: 1
                      links:
                        -
                          url: null
                          label: '&laquo; Previous'
                          active: false
                        -
                          url: 'http://safaqatek.test/api/v1/aut/product/winners?page=1'
                          label: '1'
                          active: true
                        -
                          url: null
                          label: 'Next &raquo;'
                          active: false
                      path: 'http://safaqatek.test/api/v1/aut/product/winners'
                      per_page: 20
                      to: 3
                      total: 3
      tags:
        - 'product management'
    parameters:
      -
        in: path
        name: lang
        description: ''
        example: ipsam
        required: true
        schema:
          type: string
  '/api/v1/{lang}/settings':
    get:
      summary: 'get settings'
      description: 'this route is called to get all settings'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'setting management'
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/settings/contuct':
    post:
      summary: 'save Queries'
      description: 'this route is called to save users Queries'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'setting management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ea
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: brenden.pacocha@example.net
                Inquiry_message:
                  type: string
                  description: ''
                  example: assumenda
              required:
                - name
                - email
                - Inquiry_message
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
  '/api/v1/{lang}/slider':
    post:
      summary: 'get sliders'
      description: 'this route is called when to get sliders'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'slider management'
    parameters:
      -
        in: path
        name: lang
        description: 'Optional parameter. The language.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: en
tags:
  -
    name: 'User management'
    description: "\nAPIs for managing users"
  -
    name: 'product management'
    description: "\nAPIs for managing product"
  -
    name: 'setting management'
    description: "\nAPIs for managing settings"
  -
    name: 'slider management'
    description: "\nAPIs for managing sliders"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
