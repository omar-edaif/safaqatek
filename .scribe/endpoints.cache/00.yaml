## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/login'
    metadata:
      title: login
      description: |-
        If  data was valid and everything is okay, you'll get a 200 OK response.

        Otherwise, the request will fail with status 422 with validation error if exist  .
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: perspiciatis
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: ipsum
        type: string
        custom: []
    responses:
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"message": "The given data was invalid.","errors": {"data": ["The provided credentials are incorrect."]}}}'
        headers: []
        description: '422, validation error'
      -
        status: 200
        content: '{"id": 20,"token": "20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu"}'
        headers: []
        description: '200, login'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/new/password'
    metadata:
      title: 'set new password'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of user  .'
        required: true
        example: Exemple@exemple.com
        type: string
        custom: []
      password:
        name: password
        description: 'The new password of user  .'
        required: true
        example: Exemple1233
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"state":true,"code":"200","message":"password was changed successfully","execution":"0.349 seconds","data":{"id":36,"token":"36|yAhv3yRnNyhJ9lwaPDA4uqVnc0nsGbeiqfR8jeK4"}}'
        headers: []
        description: '200, new password'
      -
        status: 404
        content: '{"state": false,"code": "404","message": "لا يوجد مستخدم بهذا البريد الإلكتروني","execution": "0.297 seconds"}'
        headers: []
        description: '404, new password'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/logout'
    metadata:
      title: logout
      description: 'If  request have param '' token_id '' valid and everything is okay, you''ll get a 200 OK response.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      token_id:
        name: token_id
        description: 'id of user token .'
        required: false
        example: '20'
        type: The
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "you are logout now"}'
        headers: []
        description: '200, logout'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/google/callback'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: ''
        required: true
        example: laboriosam
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/phone'
    metadata:
      title: 'Get phone'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of user  .'
        required: true
        example: Exemple@exemple.com
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "state": false,"code": "403","error": "لا يوجد مستخدم بهذا البريد الإلكتروني","execution": "0.211 seconds" }'
        headers: []
        description: '200, logout'
      -
        status: 200
        content: '{"message": "you are logout now"}'
        headers: []
        description: '200, logout'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/register'
    metadata:
      title: register
      description: |-
        If  data was valid and everything is okay, you'll get a 200 OK response.

        Otherwise, the request will fail with status 422 with validation error if exist  .
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'Must not be greater than 15 characters.'
        required: true
        example: hdmm
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'Must not be greater than 15 characters.'
        required: true
        example: dabdhmwdabnz
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: psatterfield@example.net
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: incidunt
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: gvqnrub
        type: string
        custom: []
    responses:
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"username": ["The username field is required."],"email": ["The email field is required."]}}'
        headers: []
        description: '422, validation error'
      -
        status: 200
        content: '{"id": 20,"token": "20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu"}'
        headers: []
        description: '200, new user'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/profile'
    metadata:
      title: 'user profile'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"jaafar","email":"admin@gmail.com","nationality":"Kingdom of Saudi Arabia","residence":"Sultanate of Oman","currency":"aed","addresse":"","phone":"+9630936950834","avatar":null,"lang":"en","sex":"male","purchases":5}}'
        headers: []
        description: '200, profile'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/purchase'
    metadata:
      title: 'user purchase'
      description: 'If  request have param '' cart and payment_id and amount '' exist and everything is okay, you''ll get a 201 OK response.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      amount:
        name: amount
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      payment_id:
        name: payment_id
        description: ''
        required: true
        example: et
        type: string
        custom: []
      cart:
        name: cart
        description: 'The Customer purchases  exempele [{"id":1,"quantity":2}] .'
        required: true
        example:
          -
            id: 1
            quantity: 2
        type: object
        custom: []
      isDonate:
        name: isDonate
        description: 'if user choise to donate.'
        required: false
        example: false
        type: boolean
        custom: []
      lat:
        name: lat
        description: 'The location lat .'
        required: false
        example: assumenda
        type: string
        custom: []
      lng:
        name: lng
        description: 'The location long .'
        required: false
        example: impedit
        type: string
        custom: []
    responses:
      -
        status: 201
        content: '{"data":{"transaction_id":"ch_3KmcRyHBm3O5wniB0TUIofgp","amount":500,"currency":"AED","created_at":"04/09/2022","cart":[{"name_en":"enim","name_ar":"الاسم ","price":235,"currency":"aed","quantity":2}],"coupons":[{"key":"U-443372-11273-1","participate_with":6,"created_at":"04/09/2022 11:04:31","product":{"name_ar":"الاسم ","name_en":"enim","image":"http://safaqatek.test/images/product/product_00.jpg","closing_at":"05/05/2022 09:05:47","price":235,"currency":"aed"}}]}}'
        headers: []
        description: '201, purchase'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/coupons'
    metadata:
      title: 'user coupons'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data": [{"key": "H-427379-12334-4","participate_with": 6,"created_at": "04/08/2022 12:04:44","product": {"name_ar": "الاسم ","name_en": "ut","image": "http://safaqatek.test/images/product/product_00.jpg",  "closing_at": "05/24/2022 09:05:39","price": 201,"currency": "aed"}}]}'
        headers: []
        description: '200, coupons are exist'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/wishlists'
    metadata:
      title: 'user wishlist'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: ''
        required: true
        example: blanditiis
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name_en":"enim","name_ar":"الاسم ","award_name_ar":"أسم الجائزة بالعربي","award_name_en":"numquam","price":235,"currency":null,"image":"http://safaqatek.test/images/product/product_00.jpg","quantity":200,"sold_out":133}]}'
        headers: []
        description: '200, wishlists are exist'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/profile/update'
    metadata:
      title: 'user profile update'
      description: 'send the field user wont update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: ''
        required: false
        example: et
        type: string
        custom: []
      lastname:
        name: lastname
        description: ''
        required: false
        example: qui
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: marcel84@example.net
        type: string
        custom: []
      currency:
        name: currency
        description: 'Must be one of <code>aed</code> or <code>sar</code>.'
        required: false
        example: aed
        type: string
        custom: []
      nationality_id:
        name: nationality_id
        description: ''
        required: false
        example: 6
        type: integer
        custom: []
      residence_id:
        name: residence_id
        description: ''
        required: false
        example: 1
        type: integer
        custom: []
      addresse:
        name: addresse
        description: ''
        required: false
        example: quas
        type: string
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: null
        type: string
        custom: []
      lang:
        name: lang
        description: 'Must be one of <code>en</code> or <code>ar</code>.'
        required: false
        example: ar
        type: string
        custom: []
      sex:
        name: sex
        description: 'Must be one of <code>male</code> or <code>female</code>.'
        required: false
        example: male
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone of user  .'
        required: false
        example: '+9941310113'
        type: string
        custom: []
      allow_notifications:
        name: allow_notifications
        description: 'allow notifecations for user'
        required: false
        example: false
        type: boolean
        custom: []
    responses:
      -
        status: 200
        content: '{"state":true,"code":"200","message":"user profile successfly updated","execution":"0.264 seconds","data":[]}'
        headers: []
        description: '200, profile updated'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/notification'
    metadata:
      title: 'save notifications'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of notification .'
        required: false
        example: aut
        type: string
        custom: []
      body:
        name: body
        description: 'The body of notifcation.'
        required: false
        example: illum
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/notification'
    metadata:
      title: 'get notifications'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: ''
        required: true
        example: velit
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/phone/check'
    metadata:
      title: 'Check phone'
      description: 'If  request have param '' phone '' exist and everything is okay, you''ll get a 200 OK response.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      phone:
        name: phone
        description: 'The phone of user  .'
        required: true
        example: '96648456952'
        type: string
        custom: []
    responses: []
    responseFields: []
