## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/google/callback'
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/{lang}/user/{provider}'
    metadata:
      title: 'google apple sign up'
      description: 'this route is called when user wont sign with their google or apple'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
      provider:
        name: provider
        description: 'must be  google apple .'
        required: true
        example: google
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/register'
    metadata:
      title: register
      description: |-
        If  data was valid and everything is okay, you'll get a 200 OK response.

        Otherwise, the request will fail with status 422 with validation error if exist  .
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 15 characters.'
        required: true
        example: zhskuvcvza
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ohoeger@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: rusrtu
        type: string
        custom: []
      phone:
        name: phone
        description: ''
        required: true
        example: et
        type: string
        custom: []
    responses:
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"username": ["The username field is required."],"email": ["The email field is required."]}}'
        headers: []
        description: '422, validation error'
      -
        status: 200
        content: '{"id": 20,"token": "20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu"}'
        headers: []
        description: '200, new user'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/login'
    metadata:
      title: login
      description: |-
        If  data was valid and everything is okay, you'll get a 200 OK response.

        Otherwise, the request will fail with status 422 with validation error if exist  .
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: marquardt.taya@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: rem
        type: string
        custom: []
    responses:
      -
        status: 422
        content: '{"message": "The given data was invalid.", "errors": {"message": "The given data was invalid.","errors": {"data": ["The provided credentials are incorrect."]}}}'
        headers: []
        description: '422, validation error'
      -
        status: 200
        content: '{"id": 20,"token": "20|zojdQE05gbfH8S08Pg6gvOqn7cZjzeJisRSR5Sxu"}'
        headers: []
        description: '200, login'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/logout'
    metadata:
      title: logout
      description: 'If  request have param '' token_id '' valid and everything is okay, you''ll get a 200 OK response.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      token_id:
        name: token_id
        description: 'id of user token .'
        required: false
        example: '20'
        type: The
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "you are logout now"}'
        headers: []
        description: '200, logout'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/phone'
    metadata:
      title: 'Get phone'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of user  .'
        required: true
        example: Exemple@exemple.com
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "state": false,"code": "403","error": "لا يوجد مستخدم بهذا البريد الإلكتروني","execution": "0.211 seconds" }'
        headers: []
        description: '200, logout'
      -
        status: 200
        content: '{"message": "you are logout now"}'
        headers: []
        description: '200, logout'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/{lang}/user/new/password'
    metadata:
      title: 'set new password'
      description: 'If  request have param '' email '' exist and everything is okay, you''ll get a 200 OK response.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      lang:
        name: lang
        description: 'The language.'
        required: false
        example: en
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of user  .'
        required: true
        example: Exemple@exemple.com
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"state":true,"code":"200","message":"password was changed successfully","execution":"0.349 seconds","data":{"id":36,"token":"36|yAhv3yRnNyhJ9lwaPDA4uqVnc0nsGbeiqfR8jeK4"}}'
        headers: []
        description: '200, new password'
      -
        status: 404
        content: '{"state": false,"code": "404","message": "لا يوجد مستخدم بهذا البريد الإلكتروني","execution": "0.297 seconds"}'
        headers: []
        description: '404, new password'
    responseFields: []
